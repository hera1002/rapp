name: Build and Push Docker Image to ECR

on:
  push:
    branches: [ "main","devops","*"]
    # paths:
    #   - 'app/**'
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-east-1

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build and tag Docker image
        id: build-image
        run: |
          IMAGE_NAME=rapp
          BRANCH_NAME=${GITHUB_REF##*/}
          COMMIT_HASH=$(git rev-parse --short $GITHUB_SHA)
          AWS_ACCOUNT_ID=136629348357
          cd app
          docker build -t $IMAGE_NAME:$BRANCH_NAME-$COMMIT_HASH .
          docker tag $IMAGE_NAME:$BRANCH_NAME-$COMMIT_HASH $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME:$BRANCH_NAME-$COMMIT_HASH

      - name: Push Docker image to ECR
        run: |
          AWS_ACCOUNT_ID=136629348357
          IMAGE_NAME=rapp
          BRANCH_NAME=${GITHUB_REF##*/}
          COMMIT_HASH=$(git rev-parse --short $GITHUB_SHA)
          docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_NAME:$BRANCH_NAME-$COMMIT_HASH

      - name: Terraform-Setup
        uses: hashicorp/setup-terraform@v1
        env:
          TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          AWS_ACCOUNT_ID=136629348357
          IMAGE_NAME=rapp
          BRANCH_NAME=${GITHUB_REF##*/}
          COMMIT_HASH=$(git rev-parse --short $GITHUB_SHA)
          cd ecs-service
          terraform init 
          # Set the desired workspace name
          desired_workspace=$BRANCH_NAME

          # Check if the workspace exists
          if terraform workspace list | grep -q "$desired_workspace"; then
            echo "Workspace '$desired_workspace' already exists."
          else
            # If the workspace doesn't exist, create it
            terraform workspace new "$desired_workspace"
            echo "Created workspace '$desired_workspace'."
          fi

          # Select the desired workspace
          terraform workspace select "$desired_workspace"
          echo "Selected workspace '$desired_workspace'."
          terraform init 
          terraform apply --auto-aprove -var 


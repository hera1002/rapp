name: CICD

on:
 push:
   branches: [ "dev" ]
 pull_request:
   branches: [ "dev" ]
jobs:
 build:
   runs-on: ubuntu-latest

   steps:
     - name: Checkout code
       uses: actions/checkout@v2

     - name: Set up Node.js
       uses: actions/setup-node@v2


#name: Node.js CI
#
#on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
#jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Set up Node.js
#        uses: actions/setup-node@v2
#        with:
#          node-version: 18
#     
#      - name: Configure AWS credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
#          aws-region: us-east-1
#
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1
#
#      - name: Build and tag Docker image
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: "144989213705.dkr.ecr.us-east-1.amazonaws.com/rapp"
#
#      # - name: create directory for  Terraform code
#      #   run: |
#      #     pwd
#      #     mkdir /home/runner/work/Bbuy/Bbuy/bbuy-infra-iac-tf 
#
#      # - name: Set Up Terraform
#      #   uses: hashicorp/setup-terraform@v2
#
#      # - name: Checkout Terraform code
#      #   uses: actions/checkout@v3
#      #   with:
#      #     repository: ProjectGooseTech/bbuy-infra-iac-tf
#      #     token: ${{secrets.PAT}}
#      #     path: /home/runner/work/Bbuy/Bbuy/bbuy-infra-iac-tf/   
#
#      - name: get-kubeconfig
#        run: |
#          pwd
#          # cd /home/runner/work/Bbuy/Bbuy/bbuy-infra-iac-tf/
#          # aws sts get-caller-identity
#          # terraform  init
#          # echo "======================================"
#          # terraform output cluster_name 1> name.log 
#          # echo "======================================"
#          # sed '2q;d' name.log | sed 's/"//g'
#          # echo "======================================"
#          # echo " aws eks update-kubeconfig --region eu-west-1 --name $(sed '2q;d' name.log | sed 's/"//g') --output yaml"
#          aws eks update-kubeconfig --region us-east-1 --name app-cluster --output yaml
#
#      - name: Configure kubectl
#        run: |
#          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
#          chmod +x kubectl
#          mkdir -p ~/.local/bin
#          mv ./kubectl ~/.local/bin/kubectl
#          kubectl version --client     
#
#      # - name: Deploy to EKS
#      #   run: | 
#      #     export BRANCH_NAME="${GITHUB_REF#refs/heads/}"
#      #     sed -i "s/dynamic/$BRANCH_NAME/g" ./eks/deployment.yml
#      #     kubectl get namespace "$BRANCH_NAME" &>/dev/null || kubectl create namespace "$BRANCH_NAME"
#      #     kubectl apply -f ./eks/deployment.yml
#      #     sleep 1m
#      #     kubectl get all -n "$BRANCH_NAME"
#      #     export DOMAIN_NAME="${BRANCH_NAME}.aws.mybbuy.com"
#          # export LB=$(kubectl get service bbuy-lb-srv  -n devops -o custom-columns="DNS:.status.loadBalancer.ingress[0].hostname" | awk 'NR==2')
#          # cat > change.json << EOF
#          #   {
#          #     "Changes": [
#          #       {
#          #         "Action": "UPSERT",
#          #         "ResourceRecordSet": {
#          #           "Name": "DOMAIN_NAME",
#          #           "Type": "CNAME",
#          #           "TTL": 300,
#          #           "ResourceRecords": [
#          #             {
#          #               "Value": "LB"
#          #             }
#          #           ]
#          #         }
#          #       }
#          #     ]
#          #   }
#          #   EOF
#          # sed -i "s/DOMAIN_NAME/$DOMAIN_NAME/" change.json
#          # sed -i "s/LB/$LB/" change.json
#          # aws route53 change-resource-record-sets \
#          #   --hosted-zone-id Z08072351FYXLOB9QY39B \
#          #   --change-batch -F ./change.json
#